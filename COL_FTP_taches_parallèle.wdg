#To edit and compare internal_properties, use WINDEV integrated tools.
#Internal properties refer to the properties of controls in windows, reports, etc.
info :
 name : COL_FTP_taches_parallèle
 major_version : 28
 minor_version : 0
 type : 7
 description : ""
 subtype : 0
procedure_set :
 identifier : 0x1600397e0035b7d7
 internal_properties : CAAAAAgAAABGLu41kG7fjQV3iS4F72qmnKaNh5694reolNKIW0iw
 code_elements :
  internal_properties : CAAAAAgAAACvoGU4/OutY3QHNavWUALkd9oid6A0b6vXoCNiC4F6IKQyxO7jHnNPeubZkM4R4iiVKzhjnRwNtnJ1tkvbky9xHjCfRRLLxdgEIigEbLd7vcX+FeC4P4WuP+bOJySRUdoIHR68iA==
  type_code : 31
  p_codes :
   -
     code : |1+
      //Structure pour un éléments du table de fichier
      STFichierARecupere	est une Structure
      	sNomFichier				est une chaîne // Nom du fichier à transférer
      	sNomFichierSansChemin	est une chaîne // Nom du fichier à transférer SANS le chemin (pour recherche)
      	bTransfertEnCours		est un booléen // Vrai si le transfert est en cours, à faux si pas commencé ou si terminé
      	bTransfertTerminé		est un booléen // Vrai si le transfert est terminé
      	bTransfertOk			est un booléen // Vrai si le transfert a pu être effectué avec succès
      	sCompteRendu			est une chaîne  // Détail de l'erreur en cas de problème
      	nTailleFichier			est un entier  // Taille totale du fichier en octet
      	nTailleDéjàRécupérée	est un entier  // Taille transférée du fichier en octet
      	sRepDestintation 		est une chaine // Répertoire ou l'on doit transférer le fichier
      	sSens 					est une eSensTransfert // Sens dans lequel effectuer le transfert "VersServeur" ou "VersClient", il s'agit d'une énumération pour éviter les erreurs de saisie
      	nIdConnexion 			est un entier // ID de la connexion de la tache parallèle
      FIN
      
      // Constantes pour indiquer l'état du fichier dans la table (si on utilise une table jauge)
      EFTPEtat est une énumération
      	FTPATraiter	= "A traiter"	
      	FTPEnCours	= " En cours" 			
      	FTPTerminé	= "Terminé"
      	FTPAnnulé	= "Annulé"		
      	FTPEnErreur	 = "En Erreur"			
      FIN
      
      
      // Tableau qui va contenir la liste des fichiers à transférer
      gtabTableauListeFichiers		est un tableau dynamique de STFichierARecupere
      // Nombre de fichier transférés
      gnNbFichierTerminé			est un entier
      //Nb de fichiers transférés avec succès
      gnNbFichierOK				est un entier
      // Taille total en octet à transférer
      gnTailleTotalARecupérer		est un entier
      
      // Nom du champ jauge global à mettre à jour durant les transferts
      gsNomChampJauge				est une chaîne=""
      
      // Cette table doit avoir 6 colonnes : 
      // Col 1 : Numérique pour le numéro du tableau interne (conseillée invisible)
      // Col 2 : Combo à : 1 pour à traiter, 2 pour en cours, 3 pour terminé, 4 pour en erreur
      // Col 3 : texte pour le nom d'un fichier
      // COL 4 : Entier pour la taille récupérée
      // COL 5 : TailleTotalFichier
      // COL 6 : Image pour la jauge
      
      // Nom d'un champ image qui va contenir l’image qui sera utilisé pour le dessin de la jauge dans le champ table (colonne 6)
      gsNomChampImagePourJaugeTable		est une chaîne =""
      // Nom du champ dans lequel va être affiché le nombre réel de connexions simultanées
      gsChampNbConnexion					est une chaîne =""
      
      // Liste des toutes les erreurs rencontrées durant les transferts	
      gsListeErreur						est une chaîne
      
      // Date/heure du début de transfert (pour calcul du temps restant estimé et du taux de transfert)
      gdhDébutTranfert					est une DateHeure
      
      // Vérifier?
      gbVerifierFin    est un booléen = Faux
     type : 720896
  procedures :
   -
     name : ftp_TacheParallèle
     internal_properties : CAAAAAgAAAATsorZd+ZsWhdLYr5kWwLp6IgQtt/aeiSsXEkBrD8vS2ggHNiFpaXUq2GkdLjcRU5y6ALEw6uGsSllWosLtdsRjL8K80W+kYdJP3aqZ3I5e5ZppTylDqQgeZKUDWhJGhTD1V2Nvfj9edLpVvLbFa379ZCNZnWAjvQC+2gnAO7Dn8PpVpGBJ9qV6KpjaODI9+zIGkHgdGfTVjrejzM69fk2yOWJNxC68Dq/x+aFcf9uB6h+tED0
     procedure_id : 1585330432490488279
     type_code : 15
     code : |1-
      // Résumé : Envoie le fichier qui se trouve à l'indice passé en paramètre dans le tableau gtabTableauListeFichiers
      // Paramètres :
      //	nIndiceTableau (entier) :indice du fichier à transférer
      //	Configftp (STConfigurationFTP) :configuration FTP de l'application
      //	stUnFichierFtp (STFichierARecupere) : Fichier FTP à transférer
      // Valeur de retour :
      // 	Aucune
      
      PROCEDURE ftp_TacheParallèle(LOCAL nIndiceTableau est un entier,Configftp est une STConfigurationFTP,stUnFichierFtp est un STFichierARecupere)
      
      // Variables locales
      
      // Identifiant de la connexion de la tache parallèle au serveur ftp
      nID_ConnexionTacheParallèle est un entier =-1
      // Transfert ASCII / Binaire
      nModeTransfert			est un entier
      
      
      
      
      // La tache parallèle se créer une connexion
      nID_ConnexionTacheParallèle = ftp_DemandeIDConnexion(Configftp)
      // Si elle n'arrive pas à se connecter, c'est que le serveur FTP est saturé, par conséquent on attend avant d'essayer une reconnexion
      tantque nID_ConnexionTacheParallèle = -1
      	
      	// On attend au maximum 30 fois 1 secondes, soit 30 secondes avant d'effectuer une tentative de connexion
      	BOUCLE (30)
      		// Toutes les secondes on vérifie si la taches parallèle doit se terminer
      		ThreadPause(10)
      		SI ExécuteThreadPrincipal(ftp_FinTache)=TachesRetourOK ALORS
      			TâcheParallèleAnnule()
      		fin
      		SI ExécuteThreadPrincipal(ftp_FinTacheEnCours,nIndiceTableau)=TachesRetourOK ALORS
      			TâcheParallèleAnnule()
      		FIN
      	fin
      	// On tente à nouveau de se connecter
      	nID_ConnexionTacheParallèle = ftp_DemandeIDConnexion(Configftp)
      fin
      
      
      
      SI Configftp.gnTypeTransfert = 1 ALORS
      	// Transfert en mode ASCII
      	nModeTransfert=ftpModeASCII
      SINON
      	// Transfert en mode binaire
      	nModeTransfert=ftpModeBinaire
      FIN	
      
      
      
      // Récupération FTP à proprement dit
      SI stUnFichierFtp:ssens=VersServeur ALORS
      	stUnFichierFtp:bTransfertOk =FTPEnvoie(nID_ConnexionTacheParallèle, stUnFichierFtp:sNomFichier, stUnFichierFtp:sRepDestintation,ftp_VerificationProgression, nModeTransfert) 
      SINON	
      	stUnFichierFtp:bTransfertOk = FTPRécupère(nID_ConnexionTacheParallèle, stUnFichierFtp:sNomFichier,  stUnFichierFtp:sRepDestintation, ftp_VerificationProgression, nModeTransfert)
      FIN
      
      
      	PROCEDURE INTERNE ftp_VerificationProgression(nTotal est un entier <utile = "obligatoire pour le suivie de ftpenvoie">, nCourant est un entier)     
      	         
      	si gtabTailleTransfert[nIndiceTableau] = 0 ALORS
      		gtabTailleTransfert[nIndiceTableau] = nTotal
      	FIN
      	SI ExécuteThreadPrincipal(ftp_FinTache)=TachesRetourOK ALORS
      		FTPDéconnecte(nID_ConnexionTacheParallèle)
      		TâcheParallèleAnnule()
      	FIN
      	
      	SI ExécuteThreadPrincipal(ftp_FinTacheEnCours,nIndiceTableau)=TachesRetourOK ALORS
      		ExécuteThreadPrincipal(ftp_FinTransfert,nIndiceTableau,Vrai,"",Vrai)
      		FTPDéconnecte(nID_ConnexionTacheParallèle)
      		TâcheParallèleAnnule()
      	FIN
      	
      	// Demander la mise a jour de son élément au thread principal pour éviter la concurrence entre taches parallèles
      	ExécuteThreadPrincipal(ftp_MiseAJourElement,nIndiceTableau,nCourant,nID_ConnexionTacheParallèle)
      	// On continue a transférer le fichier
      	RENVOYER Vrai
      	FIN
      
      
      // On ferme la connexion, le fichier est transféré
      FTPDéconnecte(nID_ConnexionTacheParallèle)
      
      // Si problème on récupère la cause de l'erreur
      SI stUnFichierFtp:bTransfertOk = Faux ALORS
      	stUnFichierFtp:sCompteRendu = <§@1600397e0034b7d70000§>+erreurinfo()	
      FIN
      
      gnNbFichierTerminé++ // Nb de fichiers terminés incrémenté
      stUnFichierFtp:bTransfertTerminé=vrai
      
      // Succès ?
      SI stUnFichierFtp:bTransfertOk ALORS 
      	gnNbFichierOK++ // Nb de fichier récupéré avec succès augmenté
      SINON
      	// Pb, maj de la chaine d'erreur
      	gsListeErreur += ChaîneConstruit(<§@1600397e0034b7d70003§>+rc,stUnFichierFtp:sNomFichier,stUnFichierFtp:sCompteRendu)
      FIN
      
      ExécuteThreadPrincipal(ftp_FinTransfert,nIndiceTableau,stUnFichierFtp:bTransfertOk,stUnFichierFtp:sCompteRendu,stUnFichierFtp:bTransfertTerminé)
      
      	
     type : 458752
   -
     name : ftp_DebutTransfert
     internal_properties : CAAAAAgAAAAYkK3h4yfLRep1WsxJbnWix1oxl8JBUnfMrELGNfMkZY5Gfh6/0iKagoDzrAgzQbcAyd8CN4XvFg8iRL7aisBG//ussfIlqyvs20sDDWuxvUyH1MPDRjNAwu/qMGNsNl/9NEPpErV5ouRfSg2cdpU027lN9BIL7oV8MUD+5VUTAuEz02ESh6iFeRb4MPWR8PIiQtO6eYWfRwr5L5NwM1fpm2IKRt77
     procedure_id : 1585556412195019352
     type_code : 15
     code : |1+
      // Résumé : Lance une tache parallèle pour transférer le fichier
      // Paramètres :
      //	sCheminLocal (chaîne ANSI) :Chemin du fichier ou dossier en local
      //	sCheminDistant (chaîne ANSI) :Chemin du fichier ou dossier sur le serveur FTP
      //	sens (énumération) :Indique si le transfert est entre le poste local vers le serveur ou l'inverse
      //	local_gstConnexionFTP (STConnexionFTP) : Connexion utilisée par le thread pour transférer le fichier
      //	local_gstConfigurationFTP (STConfigurationFTP) : Configuration de la connexion utilisée par le thread pour transférer le fichier
      // Valeur de retour :
      // 	Aucune
      //
      PROCEDURE ftp_DebutTransfert(sCheminLocal est une chaine,sCheminDistant est une chaîne, sens est une eSensTransfert, local_gstConnexionFTP est une STConnexionFTP, local_gstConfigurationFTP est une STConfigurationFTP)
      
      // Indice du tableau pour le fichier qui va être transféré
      nIndiceTableau		est un entier
      // Structure du type du tableau qui contient la liste des fichiers
      stUnFichierFtp est un STFichierARecupere
      
      si sens=VersServeur ALORS
      	// Selon le sens du serveur, certains paramètres sont différents
      	stUnFichierFtp:nTailleFichier=fTaille(sCheminLocal)
      	stUnFichierFtp:sNomFichier=sCheminLocal
      	stUnFichierFtp:sNomFichierSansChemin=ExtraitChaîne(sCheminLocal,1,fSep,DepuisFin)
      	stUnFichierFtp:sRepDestintation = sCheminDistant
      	FTPAttribut(local_gstConnexionFTP.nIDConnexion,sCheminDistant+["/"]+fExtraitChemin(sCheminLocal,fFichier+fExtension))
      	SI ErreurDétectée = Faux ALORS
      		SI Dialogue( ChaîneConstruit(<§@1600397e0034b7d70005§>,stUnFichierFtp:sRepDestintation+["/"]+stUnFichierFtp:sNomFichierSansChemin),[<§@1600397e0034b7d7000f§>,<§@1600397e0034b7d7000e§>],1,2,dlgIcôneQuestion) =2 ALORS
      			RETOUR
      		FIN
      	FIN
      	
      	
      sinon
      	// Cas VersClient
      	// Selon le sens du serveur, certains paramètres sont différents
      	//stUnFichierFtp:nTailleFichier=FTPTaille(local_gstConnexionFTP.nIDConnexion,sCheminDistant)
      	stUnFichierFtp:sNomFichier=sCheminDistant
      	stUnFichierFtp:sNomFichierSansChemin=ExtraitChaîne(sCheminDistant,1,"/",DepuisFin)
      	stUnFichierFtp:sRepDestintation = sCheminLocal
      	SI fFichierExiste(sCheminLocal+[fsep]+fExtraitChemin(sCheminDistant,fFichier+fExtension)) = Vrai ALORS
      		SI Dialogue( ChaîneConstruit(<§@1600397e0034b7d70006§>,stUnFichierFtp:sRepDestintation+[fsep]+stUnFichierFtp:sNomFichierSansChemin),[<§@1600397e0034b7d7000f§>,<§@1600397e0034b7d7000e§>],1,2,dlgIcôneQuestion) =2 ALORS
      			RETOUR
      		FIN
      	FIN
      	
      FIN
      
      // Sens du transfert
      stUnFichierFtp:sSens = sens
      
      // On incrémente la taille total cumulé des fichiers à récupérer
      gnTailleTotalARecupérer+=stUnFichierFtp:nTailleFichier
      
      // Ajout au tableau des fichiers présents sur le serveur FTP (et donc a récupérer)
      nIndiceTableau=TableauAjoute(gtabTableauListeFichiers,stUnFichierFtp)
      TableauAjoute(gtabTailleTransfert)
      TableauAjoute(gtabTransfertCourant,nIndiceTableau)
      
      
      // On lance une tache parallèle pour réaliser l'envoie d'un fichier, on passe en paramètre l'indice tableau du fichier afin de pouvoir retrouver les paramètres d’envoi du fichier
      tache_Parallèle est une TâcheParallèle 
      tache_Parallèle = TâcheParallèleExécute(ftp_TacheParallèle,(nIndiceTableau,local_gstConfigurationFTP,stUnFichierFtp))
      
      TableauAjouteLigne(FEN_PRINCIPALE.gtab_TacheParallèle,tache_Parallèle)
      
      
     type : 458752
   -
     name : ftp_DemandeIDConnexion
     internal_properties : CAAAAAgAAABwUpReHHxOSVtMqIg3gNczQAgbpl7pRz1FVAqvL/HciKT5jZLC9V//uxlHiF3CcGL5pAy903g1W95Ef3Kt0EjCX5GVuSThkI0pwqZW5DPP1Tfp4OBrOjqK8TLjdI+Wl51q/FSasiOimgtSgxfeOICsdI88/yhp9V/xusNkX9Ua0s/URaHVnBxGmYrGXYQakmaN0QDdVQ==
     procedure_id : 1586420572500014413
     type_code : 15
     code : |1+
      // Résumé : Demande une connexion au serveur FTP
      // Paramètres :
      //	Configftp (STConfigurationFTP) :Configuration FTP pour les paramètres de connexion
      // Valeur de retour :
      // 	entier : Identifiant de la connexion ou -1 si la connexion a échoué
      //
      PROCEDURE ftp_DemandeIDConnexion(Configftp est une STConfigurationFTP)
      // Variables locales
      sProtocole est une chaîne
      
      // On recherche le protocole selon la sécurité de la connexion
      SELON Configftp.gnSécuritéConnexion
      	CAS ESecuriteConnexion.NonSecurisé
      		// non sécurisée	
      		sProtocole = ""
      		
      	CAS ESecuriteConnexion.sftp
      		// sécurisée : protocole SFTP
      		sProtocole = "sftp://"
      	CAS ESecuriteConnexion.ftps
      		// sécurisée : protocole FTPS
      		sProtocole = "ftps://"
      	CAS ESecuriteConnexion.ftpes		
      		// sécurisée : protocole FTPES	
      		sProtocole = "ftpes://"
      		
      FIN
      
      SI Configftp.gbIgnorerErreur = Vrai ALORS
      	FTP.IgnoreErreur = ftpIgnoreNomCertificatInvalide + ftpIgnoreCertificatInvalide + ftpIgnoreCertificatExpiré
      SINON
      	FTP.IgnoreErreur = 0
      FIN
      
      SI Configftp.gbAnonyme=Faux ALORS
      	// connexion nominative
      	SI Configftp.gbAvance=Faux ALORS
      		// paramétrage standard
      		RENVOYER FTPConnecte(sProtocole+Configftp.gsAdresse_FTP,Configftp.gsNom_Utilisateur,Configftp.gsMDP_utilisateur)		
      	SINON
      		// paramétrage avancé
      		RENVOYER FTPConnecte(sProtocole+Configftp.gsAdresse_FTP,Configftp.gsNom_Utilisateur,...
      		Configftp.gsMDP_utilisateur,Configftp.gnNumero_Port,Configftp.gnTypeConnexion,Configftp.gnDelai)
      	FIN  	
      SINON
      	// Connexion anonyme
      	SI Configftp.gbAvance=Faux ALORS
      		// paramétrage standard
      		renvoyer FTPConnecte(sProtocole+Configftp.gsAdresse_FTP)
      	SINON
      		// paramétrage avancé
      		RENVOYER FTPConnecte(sProtocole+Configftp.gsAdresse_FTP,"","",Configftp.gnNumero_Port,Configftp.gnTypeConnexion,Configftp.gnDelai)
      	FIN  	
      FIN                    
      
     type : 458752
   -
     name : ftp_MiseAJourElement
     internal_properties : CAAAAAgAAAB+UJYkWrVL2dt8sCh/GN8DwGijRvYhN8U9zNrXf9EcUIyxLcpCBcfv+5k/yGU62LIpZNTd23AFk3ac74rdgMhKZ9n18WSRaL1pcvK62Dc7wTNlfFz/DoZmRRb/+BP689kGCLBm5vd+9l8WbxsiHNwY4HvIuzz9ges13l8oY6mWfjswEZ05cFgCDZ7SodheeaxrN/7fVw==
     procedure_id : 1586425069333917274
     type_code : 15
     group : 2
     code : |1+
      // Résumé : Procédure exécuter par le thread principal à la demande d'une tache parallèle pour mettre à jour le tableau des fichiers en cours de transfert
      // Paramètres :
      //	nIndiceTableau (entier) :Indice du tableau pour connaître l'élément qui doit être mis à jour
      //	nCourant (entier) :Nombre d'octet déjà transférer du fichier
      //	nIDConnexion (entier) : <indiquez ici le rôle de nIDConnexion>
      // Valeur de retour :
      // 	Aucune
      
      PROCEDURE ftp_MiseAJourElement(nIndiceTableau est un entier, nCourant est un entier, nIDConnexion est un entier)
      // On met à jour l'élément du tableau en cours de transfert
      COL_FTP_taches_parallèle.gtabTableauListeFichiers[nIndiceTableau].nTailleDéjàRécupérée=nCourant
      COL_FTP_taches_parallèle.gtabTableauListeFichiers[nIndiceTableau].bTransfertEnCours=vrai
      COL_FTP_taches_parallèle.gtabTableauListeFichiers[nIndiceTableau].nIdConnexion = nIDConnexion
      
      
      
     type : 458752
   -
     name : ftp_FinTransfert
     procedure_id : 1586437769559101159
     type_code : 15
     group : 2
     code : |1+
      // Résumé : <indiquez ici ce que fait la procédure>
      // Paramètres :
      //	nIndiceTableau (entier) : indice du tableau à mettre à jour
      //	bTransfertOk (booléen) : booléen pour savoir si le transfert a une erreur
      //	sCompteRendu (chaîne ANSI) : texte de l'erreur si le transfert à échoué
      //	bTransfertTerminé (booléen) : booléen pour savoir si le transfert est terminé
      // Valeur de retour :
      // 	Aucune
      //
      PROCEDURE ftp_FinTransfert(nIndiceTableau est un entier, bTransfertOk est un booléen, sCompteRendu est une chaine, bTransfertTerminé est un booléen)
      // Mise à jour du tableau des fichiers
      gtabTableauListeFichiers[nIndiceTableau]:bTransfertTerminé=bTransfertTerminé
      gtabTableauListeFichiers[nIndiceTableau]:bTransfertOk=bTransfertOk
      gtabTableauListeFichiers[nIndiceTableau]:sCompteRendu=sCompteRendu
     type : 458752
   -
     name : ftp_FinTache
     procedure_id : 1587876330190870603
     type_code : 15
     group : 2
     code : |1+
      // Résumé : Indique a la tache parallèle qu'elle doit s'arrêter
      // Paramètres :
      //	Aucun
      // Valeur de retour :
      // 	chaîne ANSI : TachesRetourOK si les taches doivent se terminer
      //
      //
      PROCEDURE ftp_FinTache()
      // Fin des tâches ?
      si  bFintache ALORS
      	renvoyer TachesRetourOK
      sinon
      	renvoyer TachesRetourNON
      FIN
     type : 458752
   -
     name : ftp_FinTacheEnCours
     procedure_id : 1588247196325948910
     type_code : 15
     group : 2
     code : |1-
      // Résumé : Annule une tache en cours
      // Paramètres :
      //	nIndiceTableau (entier) :Valeur à chercher dans le tableau
      // Valeur de retour :
      // 	chaîne ANSI : // 	Aucune
      //
      PROCEDURE ftp_FinTacheEnCours(nIndiceTableau est un entier)
      // Cherche élément
      nIndiceElement est un entier = TableauCherche(FEN_PRINCIPALE.gtab_AnnulationTache,tcLinéaire,nIndiceTableau)
      
      // Élément trouvé ?
      si nIndiceElement<>-1 ALORS
      	TableauSupprime(FEN_PRINCIPALE.gtab_AnnulationTache,nIndiceElement)
      	renvoyer TachesRetourOK
      sinon
      	renvoyer TachesRetourNON
      FIN
     type : 458752
   -
     name : ftp_GèreListeServeur
     internal_properties : CAAAAAgAAACczbfKkM1VncOaoC92bY3Hoz6YVY1lS8sSAS69zTUvIKDa83juISdCiEZNB6kboPsjfcVdnB/2/bqywXKCi6PBGglZgCodXCjscDn4HPp3VzSNU79snnAAlscBh09rq3nvEgMtLZdwEhatuy4a1/IKXxH9WMUV1UR/QKN3CZeexZqGdNAkvbNaYUO7uejzrbWWRo1QjBllhA==
     procedure_id : 1615377877666298337
     type_code : 15
     group : 4
     code : |1+
      // Résumé : Gère le transfert des éléments
      // Paramètres :
      //	tabElementTransfert (tableau) :Tableau d'élément à transférer
      // Valeur de retour :
      // 	Aucune
      //
      PROCEDURE ftp_GèreListeServeur(tabElementTransfert est un tableau de ElementATransferer)
      
      // On parcours les éléments à transférer
      POUR TOUT ElementATransfererEnParallèle de tabElementTransfert
      	tantque SémaphoreDébut("PoolThread",10)=faux
      		SI bFintache = Vrai ALORS
      			TâcheParallèleAnnule()
      			RETOUR
      		FIN
      		ThreadPause(10)
      	FIN
      	// On transfert 1 fichier par tache parallèle.
      	// Si l'application est bloqué a 8 taches parallèles, mais qu'une 9 eme est appelée elle est mise en attente par le système.
      	// Une fois qu'une tache précédente se termine, la tache en attente est lancée par le système.			
      	SI bFintache = Vrai ALORS
      		TâcheParallèleAnnule()
      		RETOUR
      	FIN
      	ftp_DebutTransfert(ElementATransfererEnParallèle.sCheminElementLocal,ElementATransfererEnParallèle.sCheminElementDistant,VersServeur,gstConnexionFTP,gstConfigurationFTP)
      FIN
     type : 458752
   -
     name : ftp_GèreListeLocal
     internal_properties : CAAAAAgAAACGi7OxPlL/NKYRSvY35gxpkn6PMmuUfRpKEjS9hz/bWoFmm3iyr9puglvz3VgPzvh2NoGt98WJZ+PLoLi+PUuNUCPPd9KJrj8A0CfDWbxc8oWxz7/Oc5FF9XKTEH9RYAiH71DUncjbeqL5rcjBYxf7/cbb61kGF3F1bgsEADm+y/VUOyfrAnuVgAPHz7OsK3vQEyknHw==
     procedure_id : 1615379080258666448
     type_code : 15
     group : 4
     code : |1+
      // Résumé : Gère le transfert des éléments
      // Paramètres :
      //	tabElementTransfert (tableau) :Tableau d'élément à transférer
      // Valeur de retour :
      // 	Aucune
      //
      PROCEDURE ftp_GèreListeLocal(tabElementTransfert est un tableau de ElementATransferer)
      
      // On parcours les éléments à transférer
      POUR TOUT ElementATransfererEnParallèle de tabElementTransfert
      	tantque SémaphoreDébut("PoolThread",10)=faux
      		SI bFintache = Vrai ALORS
      			TâcheParallèleAnnule()
      			RETOUR
      		FIN
      		ThreadPause(10)
      	FIN
      	// On transfert 1 fichier par tache parallèle.
      	// Si l'application est bloqué a 8 taches parallèles, mais qu'une 9 eme est appelée elle est mise en attente par le système.
      	// Une fois qu'une tache précédente se termine, la tache en attente est lancée par le système.			
      	// On parcours les éléments à transférer
      	SI bFintache = Vrai ALORS
      		TâcheParallèleAnnule()
      		retour
      	FIN
      	ftp_DebutTransfert(ElementATransfererEnParallèle.sCheminElementLocal,ElementATransfererEnParallèle.sCheminElementDistant,VersClient,gstConnexionFTP,gstConfigurationFTP)
      FIN
     type : 458752
  procedure_templates : []
  property_templates : []
 code_parameters :
  internal_properties : CAAAAAgAAACVGQgYbalU7DKC3oH4ItDrjtcTHXXV/EuH8q0IbhyQlw==
  original_name : COL_SansNom1
resources :
 string_res :
  identifier : 0x1600397e0034b7d7
  internal_properties : CAAAAAgAAACm76HWfKGWp33VjXInA4cRlqArlgTTA862QGt72W2ld5Y=
  strings :
   -
     text :
      fr-FR : "Le transfert du fichier a échouée. "
     index : 0
   -
     text :
      fr-FR : "Erreur durant le transfert du fichier %1 : %2"
     index : 3
   -
     text :
      fr-FR : "Le fichier %1 existe déjà sur le serveur, confirmez-vous son remplacement par le fichier local ?"
     index : 5
   -
     text :
      fr-FR : "Le fichier %1 existe déjà en local, confirmez-vous son remplacement par le fichier présent sur le serveur ?"
     index : 6
   -
     text :
      fr-FR : Ne pas remplacer
     index : 14
   -
     text :
      fr-FR : Remplacer
     index : 15
custom_note :
 internal_properties : CAAAAAgAAABtB9HWVzrXO2+4NDRVK0vmzaNKrCKqH1DBX30lMmGZ
